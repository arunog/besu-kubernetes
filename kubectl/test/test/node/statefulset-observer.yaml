---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: validator1-sa
  labels:
    app.kubernetes.io/name: besu
    app.kubernetes.io/release: 1.0.0

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: validator1-key-read-role
  labels:
    app.kubernetes.io/name: besu
    app.kubernetes.io/release: 1.0.0
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    resourceNames: [ besu-validator1-key ]
    verbs: ["get"]
  - apiGroups: [""]
    resources:
      - nodes
      - nodes/proxy
      - services
      - endpoints
      - pods
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: validator1-rb
  labels:
    app.kubernetes.io/name: besu
    app.kubernetes.io/release: 1.0.0
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: validator1-key-read-role
subjects:
- kind: ServiceAccount
  name: validator1-sa
  namespace: default
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: validator1
  labels:
    app.kubernetes.io/name: besu
    app.kubernetes.io/release: 1.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: besu
      app.kubernetes.io/release: 1.0.0
  serviceName: besu-validator1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: besu
        app.kubernetes.io/release: 1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9545"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: validator1-sa
      containers:
        - name: validator1
          image: hyperledger/besu:latest
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 100m
              memory: 1024Mi
            limits:
              cpu: 500m
              memory: 2048Mi
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: VALIDATOR1_PUBKEY
              valueFrom:
                configMapKeyRef:
                  name: besu-configmap
                  key: validator1PubKey
            - name: KUBE_CONFIG_PATH
              valueFrom:
                configMapKeyRef:
                  name: besu-configmap
                  key: kubeConfig
            - name: VALIDATOR1_IP
              valueFrom:
                configMapKeyRef:
                  name: besu-configmap
                  key: validator1Ip
          volumeMounts:
            - name: genesis-config
              mountPath: /configs
              readOnly: true
            - name: config-toml
              mountPath: /etc/besu
              readOnly: true
          ports:
            - containerPort: 8545
              name: json-rpc
            - containerPort: 8546
              name: ws
            - containerPort: 8547
              name: graphql
            - containerPort: 30303
              name: rlpx
          command:
            - /bin/sh
            - -c
          args:
            - |
              exec /opt/besu/bin/besu \
              --config-file=/etc/besu/config.toml \
              --bootnodes=enode://${VALIDATOR1_PUBKEY}@${VALIDATOR1_IP}:30303
          livenessProbe:
            httpGet:
              path: /liveness
              port: 8545
            initialDelaySeconds: 60
            periodSeconds: 30
      volumes:
        - name: genesis-config
          configMap:
            name: besu-configmap
            items:
              - key: genesis.json
                path: genesis.json
        - name: config-toml
          configMap:
            name: besu-toml-configmap
